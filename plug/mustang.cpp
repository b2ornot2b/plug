#include "mustang.h"
#include <stdio.h>

Mustang::Mustang()
{
}

Mustang::~Mustang()
{
    this->stop_amp();
}

int Mustang::start_amp()
{
    // TODO: send initialization string

    int ret;
    int recieved;

    unsigned char p1[LENGTH] = {0x00, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    unsigned char p2[LENGTH] = {0x1a, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    unsigned char p3[LENGTH] = {0xff, 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

    // initialize libusb
    ret = libusb_init(NULL);
    if (ret)
        return ret;

    // get handle for the device
    piec_hand = NULL;
    piec_hand = libusb_open_device_with_vid_pid(NULL, USB_VID, USB_PID);
    if(piec_hand == NULL)
        return -1;

    // claim the device
    ret = libusb_claim_interface(piec_hand, 1);
    if(ret)
        return ret;

//    libusb_interrupt_transfer(piec_hand, 1, p1, LENGTH, &recieved, TMOUT);
//    libusb_interrupt_transfer(piec_hand, 1, p2, LENGTH, &recieved, TMOUT);
//    libusb_interrupt_transfer(piec_hand, 1, p3, LENGTH, &recieved, TMOUT);

    return 0;
}

int Mustang::stop_amp()
{
    // TODO: send some finishing strings if any

    int ret;

    // release claimed interface
    ret = libusb_release_interface(piec_hand, 1);
    if(ret)
        return ret;

    // close opened interface
    libusb_close(piec_hand);

    // stop using libusb
    libusb_exit(NULL);
    printf("amp stopped\n");

    return 0;
}
